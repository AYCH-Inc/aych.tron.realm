Tightdb Changelog:
==================

Format:

2012-mm-dd
----------
! Fixed bug [github issuenr]: .... 		 (user visible bug fixed       - passed on to release notes)
+ Added feature ....				     (user visible new feature     - passed on to release notes)
- Removed/deprecated feature/method .... (user visible removed feature - passed on to release notes)
. Any other notes .... 				     (internal changes)

==================

2012-??-??
----------


2012-07-19 (Kristian Spangsege)
----------
+ Table::create() added. Use this to create a freestanding top-level table with dynamic lifetime (determined by reference counting).
+ TableRef::reset() added to set a table reference to null.


2012-07-15 (Kristian Spangsege)
----------
+ Spec::compare() renamed to Spec::operator==(), and made generally available, not only while compiling in debug mode.
+ Spec::operator!=() added.
+ Table::compare() renamed to Table::operator==(), and made generally available, not only while compiling in debug mode.
+ Table::operator!=() added.
+ MyTable::compare() renamed to MyTable::operator==(), and made generally available, not only while compiling in debug mode.
+ MyTable::operator!=() added.
+ Group::operator==() and Group::operator!=() added.
. Array::Compare() and Column::Compare() made generally available, not only while compiling in debug mode.


2012-07-09 (Kristian Spangsege)
----------
+ Table::is_valid() added. Most language bindings must check this flag before calling any member function on any table.
+ MyTable::is_valid() added.
+ Destroying a Group will invalidate all table wrappers (instances of Table) as well as all direct and indirect subtable wrappers.
+ Any modifying operation on a table will generally invalidate all direct and indirect subtable wrappers.
+ See documentation for Table::is_valid() for more details on when a table becomes invalid, and when it does not.
+ my_table[i].mixed.is_subtable() added.
+ my_table[i].mixed.get_subtable() added.


2012-07-08 (Kristian Spangsege)
----------
. LangBindHelper::new_table() now returns null on memory allocation error. This may change in the future to instead throw an exception.


2012-06-27
----------
-+ Table::sorted(...) changed name to get_sorted_view(...)
- Removed Table::find_pos_int(...) from public API

+ Added a the following methods to a TableView:  
	template<class E> void set_enum(size_t column_ndx, size_t row_ndx, E value);
	ColumnType  get_mixed_type(size_t column_ndx, size_t row_ndx) const;
	size_t      get_subtable_size(size_t column_ndx, size_t row_ndx) const;
	void        clear_subtable(size_t column_ndx, size_t row_ndx);
	size_t      find_first_bool(size_t column_ndx, bool value) const;
    size_t      find_first_date(size_t column_ndx, time_t value) const;
	void		add_int(size_t column_ndx, int64_t value);
	TableView      find_all_bool(size_t column_ndx, bool value);
    ConstTableView find_all_bool(size_t column_ndx, bool value) const; (for class TableView and ConstTableView)
    TableView      find_all_date(size_t column_ndx, time_t value);
    ConstTableView find_all_date(size_t column_ndx, time_t value) const; (for class TableView and ConstTableView)

2012-06-??
----------
- Group() interfaced changed. Now with multiple options. default option changed from readonly...
+ Generated C++ highlevel API for tables with up to 15 columns
