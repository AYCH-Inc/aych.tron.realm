#
# C++ reference documentation for Query class
#

ID         : class_query
TITLE      : Query
SUMMARY    : &query_intro_summary
             |
             Query your TightDB table.
DESCR      : &query_intro_descr
             |
             Query objects are used to build-up queries. Conditions can be added to a query 
             through a fluent interface.
SEE        : 
EXAMPLES   : 
- DESCR: 
  CODE: ex_cpp_query_intro
IGNORE     : []                   # List of method-ids to ignore   
CATEGORIES :
- conditions:
  METHODS:
  - query_equals_boolean:
  - query_equals_integer:
  - query_equals_string:
      NAMES    : equal
      SIGNATURE: |
                 Query& equal(size_t column_ndx, bool value);
                 Query& equal(size_t column_ndx, int64_t value);
                 Query& equal(size_t column_ndx, const char* value, bool caseSensitive=true);
      SUMMARY  : &query_equals_summary
                 |
                 Equal to
      DESCR    : &query_equals_descr
                 |
                 Queries for column values equals to a certain value.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : [bool, int64_t, const char*]
        DESCR  : The value
      - NAME   : caseSensitive
        TYPES  : bool
        DESCR  : &query_caseSensitive_descr
                 'String match can be performed case sensitive or not. Default: <code>true</code>.'
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_equals
  - query_notEquals_boolean:
  - query_notEquals_integer:
  - query_notEquals_string:
      NAMES    : not_equal
      SIGNATURE: |
                 Query& not_equal(size_t column_ndx, bool value);
                 Query& not_equal(size_t column_ndx, int64_t value);
                 Query& not_equal(size_t column_ndx, const char* value, bool caseSensitive=true);
      SUMMARY  : &query_notEquals_summary
                 |
                 Not equal to
      DESCR    : &query_notEquals_descr
                 |
                 Queries for column values not equals to a certain value.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : [bool, int64_t, const char*]
        DESCR  : The value
      - NAME   : caseSensitive
        TYPES  : bool
        DESCR  : 'String match can be performed case sensitive or not. Default: <code>true</code>.'
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_notEquals
  - query_greaterThan:
      NAMES    : greater
      SUMMARY  : &query_greaterThan_summary
                 |
                 Greater than
      DESCR    : &query_greaterThan_descr
                 |
                 Queries for column values greater than a certain value.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : int64_t
        DESCR  : The value
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_greaterThan
  - query_greaterThanOrEqual:
      NAMES    : greater_equal
      SUMMARY  : &query_greaterThanOrEqual_summary
                 |
                 Greater than or equal to
      DESCR    : &query_greaterThanOrEqual_descr
                 |
                 Queries for column values greater than or equal to a certain value.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : int64_t
        DESCR  : The value
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_greaterThanOrEqual
  - query_lessThan:
      NAMES    : less
      SUMMARY  : &query_lessThan_summary
                 |
                 Less than
      DESCR    : &query_lessThan_descr
                 |
                 Queries for column values less than a certain value.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : int64_t
        DESCR  : The value
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_lessThan
  - query_lessThanOrEqual:
      NAMES    : less_equal
      SUMMARY  : &query_lessThanOrEqual_summary
                 |
                 Less than or equal to
      DESCR    : &query_lessThanOrEqual_descr
                 |
                 Queries for column values less than or equal to a certain value.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : int64_t
        DESCR  : The value
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_lessThanOrEqual
  - query_between:
      NAMES    : between
      DESCR    : &query_between_descr
                 |
                 Queries for column values in ranges.
      SUMMARY  : &query_between_summary
                 |
                 Belongs to an interval.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : from
        TYPES  : int64_t
        DESCR  : Lower bound of range
      - NAME   : to
        TYPES  : int64_t
        DESCR  : Upper bound of range
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_between
  - query_equals_date:
      NAMES    : equal_date
      SUMMARY  : &query_equals_date_summary
                 |
                 Equal to
      DESCR    : &query_equals_date_descr
                 |
                 Queries for column values equals a certain date/timestamp
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : time_t
        DESCR  : The value
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_equals_date
  - query_notEquals_date:
      NAMES    : not_equal_date
      SUMMARY  : &query_notEquals_date_summary
                 |
                 Not equal to
      DESCR    : &query_notEquals_date_descr
                 |
                 Queries for column values not equals to a certain date/timestamp.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : time_t
        DESCR  : The value
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_notEquals_date
  - query_greaterThan_date:
      NAMES    : greater
      SUMMARY  : &query_greaterThan_date_summary
                 |
                 Greater than
      DESCR    : &query_greaterThan_date_descr
                 |
                 Queries for column values greater than a certain date/timestamp.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : time_t
        DESCR  : The value
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_greaterThan_date
  - query_greaterThanOrEqual_date:
      NAMES    : greater_equal_date
      SUMMARY  : &query_greaterThanOrEqual_date_summary
                 |
                 Greater than or equal to
      DESCR    : &query_greaterThanOrEqual_date_descr
                 |
                 Queries for column values greater than or equal to a certain date/timestamp.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : time_t
        DESCR  : The value
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_greaterThanOrEqual_date
  - query_lessThan:
      NAMES    : less_date
      SUMMARY  : &query_lessThan_date_summary
                 |
                 Less than
      DESCR    : &query_lessThan_date_descr
                 |
                 Queries for column values less than a certain date/timestamp.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : time_t
        DESCR  : The value
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_lessThan_date
  - query_lessThanOrEqual_date:
      NAMES    : less_equal_date
      SUMMARY  : &query_lessThanOrEqual_date_summary
                 |
                 Less than or equal to
      DESCR    : &query_lessThanOrEqual_date_descr
                 |
                 Queries for column values less than or equal to a certain date/timestamp.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : time_t
        DESCR  : The value
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_lessThanOrEqual_date
  - query_between_date:
      NAMES    : between_date
      DESCR    : &query_between_date_descr
                 |
                 Queries for column values in ranges.
      SUMMARY  : &query_between_date_summary
                 |
                 Belongs to an interval.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : from
        TYPES  : time_t
        DESCR  : Lower bound of range
      - NAME   : to
        TYPES  : time_t
        DESCR  : Upper bound of range
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_between_date
  - query_startsWith:
      NAMES    : begins_with
      DESCR    : &query_startsWith_descr
                 |
                 Queries for column values which begin with a certain prefix
      SUMMARY  : &query_startsWith_summary
                 |
                 Substring match at the begining of the attribute
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : const char*
        DESCR  : The value
      - NAME   : caseSensitive
        TYPES  : bool
        DESCR  : *query_caseSensitive_descr
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_startsWith
  - query_endsWith:
      NAMES    : ends_with
      DESCR    : &query_endsWith_descr
                 |
                 Queries for column values which end with a certain suffix.
      SUMMARY  : &query_endsWith_summary
                 |
                 Substring match at the end at the attribute.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : const char*
        DESCR  : The value
      - NAME   : caseSensitive
        TYPES  : bool
        DESCR  : *query_caseSensitive_descr
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_endsWith
  - query_contains:
      NAMES    : contains
      DESCR    : &query_contains_descr
                 |
                 Queries for column values which contain a certian substring.
      SUMMARY  : &query_contains_summary
                 |
                 Substring search.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : const char*
        DESCR  : The value
      - NAME   : caseSensitive
        TYPES  : bool
        DESCR  : *query_caseSensitive_descr
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_contains
  - query_equals_binary:
      NAMES    : equal_binary
      SUMMARY  : &query_equals_binary_summary
                 |
                 Equal to
      DESCR    : &query_equals_binary_descr
                 |
                 Queries for column values equals to a certain value.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : const char*
        DESCR  : The value
      - NAME   : len
        TYPES  : size_t
        DESCR  : Length of <code>value</code>
      - NAME   : caseSensitive
        TYPES  : bool
        DESCR  : *query_caseSensitive_descr
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_equals_binary
  - query_notEquals:
      NAMES    : not_equal_binary
      SUMMARY  : &query_notEquals_binary_summary
                 |
                 Not equal to
      DESCR    : &query_notEquals_binary_descr
                 |
                 Queries for column values not equals to a certain value.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : const char*
        DESCR  : The value
      - NAME   : len
        TYPES  : size_t
        DESCR  : Length of <code>value</code>
      - NAME   : caseSensitive
        TYPES  : bool
        DESCR  : *query_caseSensitive_descr
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_notEquals_binary
  - query_startsWith_binary:
      NAMES    : begins_with_binary
      DESCR    : &query_startsWith_binary_descr
                 |
                 Queries for column values which begin with a certain prefix
      SUMMARY  : &query_startsWith_binary_summary
                 |
                 Substring match at the begining of the attribute
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : const char*
        DESCR  : The value
      - NAME   : len
        TYPES  : size_t
        DESCR  : Length of <code>value</code>
      - NAME   : caseSensitive
        TYPES  : bool
        DESCR  : *query_caseSensitive_descr
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_startsWith_binary
  - query_endsWith:
      NAMES    : ends_with_binary
      DESCR    : &query_endsWith_binary_descr
                 |
                 Queries for column values which end with a certain suffix.
      SUMMARY  : &query_endsWith_binary_summary
                 |
                 Substring match at the end at the attribute.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : const char*
        DESCR  : The value
      - NAME   : len
        TYPES  : size_t
        DESCR  : Length of <code>value</code>
      - NAME   : caseSensitive
        TYPES  : bool
        DESCR  : *query_caseSensitive_descr
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_endsWith_binary
  - query_contains_binary:
      NAMES    : contains_binary
      DESCR    : &query_contains_binary_descr
                 |
                 Queries for column values which contain a certian substring.
      SUMMARY  : &query_contains_binary_summary
                 |
                 Substring search.
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index
      - NAME   : value
        TYPES  : const char*
        DESCR  : The value
      - NAME   : len
        TYPES  : size_t
        DESCR  : Length of <code>value</code>
      - NAME   : caseSensitive
        TYPES  : bool
        DESCR  : *query_caseSensitive_descr
      RETURN:
        TYPE   : Query&
        DESCR  : The query object
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_contains_binary
- combiners:
  METHODS:
  - query_group:
      NAMES    : group
      DESCR    : &query_group_descr
                |
                Group conditions ("left" parenthesis). Group of conditions can be nested and they are 
                conceptually a parenthesis (PHP does not allow overloading () as an operator or method). 
      SUMMARY  : &query_group_summary
                 |
                 Start group ("left parenthesis").
      RETURN:
        TYPE   : Query
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_group
  - query_endGroup:
      NAMES    : end_group
      DESCR    : &query_endGroup_descr
                 |
                 Group conditions ("right" parenthesis).
      SUMMARY  : &query_endGroup_summary
                 |
                 Stop group ("right parenthesis")
      RETURN:
        TYPE   : Query
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_group
  - query_or:
      NAMES    : Or
      DESCR    : &query_or_descr
                 |
                 Logical-or.
      SYMMARY  : &query_or_summary
                 |
                 Logical-or
      RETURN:
        TYPE   : Query
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_or
  - query_subtable:
      NAMES    : subtable
      DESCR    : &query_subtable_descr
                 |
                 Query a subtable
      SUMMARY  : &query_subtable_summary
                 |
                 Query a subtable
      PARAMS:
      - NAME   : column
        TYPES  : size_t
        DESCR  : Column index
      RETURN:
        TYPE   : Query
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_subtable
  - query_endSubtable:
      NAMES    : end_subtable
      DESCR    : &query_endSubtable_descr
                 |
                 End of subtable query
      SUMMARY  : &query_endSubtable_summary
                 |
                 End of subtable query
      RETURN:  
        TYPE   : Query
        DESCR  : The query object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_subtable
- actions:
  METHODS:
  - query_find_all_const:
  - query_find_all:
      DESCR    : &query_find_all_descr
                 |
                 Execute a query. See the {@link class_tableview} class for further details. 
      SUMMARY  : &query_find_all_summary
                 |
                 Execute query.
      SIGNATURE: |
                 TableView      find_all(Table& table, size_t start=0, size_t end=size_t(-1), size_t limit=size_t(-1));
                 ConstTableView find_all(const Table& table, size_t start=0, size_t end=size_t(-1), size_t limit=size_t(-1));

      PARAMS:
      - NAME   : table
        TYPES  : [Table&, const Table&]
        DESCR  : Reference to table
      - NAME   : start
        TYPES  : size_t
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : size_t
        DESCR  : "Row to stop search. Default: -1 (infinity)."
      - NAME   : limit
        TYPES  : size_t
        DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : [TableView, ConstTableView]
        DESCR  : The TableView object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_findall
  - query_find_next:
      NAME     : find_next
      DESCR    : &query_find_next_descr
                 |
                 Find next row
      SUMMARY  : &query_find_next_summary
                 |
                 Find next row
      PARAMS:
      - NAME   : table
        TYPES  : const Table&
        DESCR  : Reference to table
      - NAME   : lastmatch
        TYPES  : size_t
        DESCR  : "Row to stop search. Default: -1 (infinity)."
      RETURN:
      - TYPES  : size_t
        DESCR  : Row number
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_find_next
  - query_sum:
      NAMES    : sum
      DESCR    : &query_sum_descr
                 |
                 Calculates the sum. This method can only be applied to numerical columns.
      SUMMARY  : &query_sum_summary
                 |
                 Calculate sum.
      CONST    : true
      PARAMS   :
      - NAME   : table
        TYPES  : const Table&
        DESCR  : Reference to table     
      - NAME   : column
        DESCR  : Column index
        TYPES  : size_t
      - NAME   : resultcount
        DESCR  : The number of rows used to calculate the sum.
        TYPES  : size_t*
      - NAME   : start
        TYPES  : size_t
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : size_t
        DESCR  : "Row to stop search. Default: -1 (infinity)."
      - NAME   : limit
        TYPES  : size_t
        DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : int64_t
        DESCR  : The sum.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_sum
  - query_size:
      NAMES    : count
      DESCR    : &query_size_descr
                 |
                 FInd the number of matching rows
      SUMMARY  : &query_size_summary
                 |
                 Number of matching rows.
      CONST    : true
      PARAMS   :
      - NAME   : table
        TYPES  : const Table&
        DESCR  : Reference to table     
      - NAME   : column
        DESCR  : Column index
        TYPES  : size_t
      - NAME   : resultcount
        DESCR  : The number of rows used to calculate the sum.
        TYPES  : size_t*
      - NAME   : start
        TYPES  : size_t
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : size_t
        DESCR  : "Row to stop search. Default: -1 (infinity)."
      - NAME   : limit
        TYPES  : size_t
        DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : size_t
        DESCR  : The number of rows.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_size
  - query_maximum_date:
  - query_maximum:
      NAMES    : sum
      DESCR    : &query_maximum_descr
                 |
                 This method finds the highest value.
      SUMMARY  : &query_maximum_summary
                 |
                 Highest value.
      CONST    : true
      SIGNATURE: |
                 int64_t maximum(const Table& table, size_t column, size_t* resultcount=NULL, size_t start=0, size_t end = size_t(-1), size_t limit=size_t(-1)) const;
                 time_t maximum_date(const Table& table, size_t column, size_t* resultcount=NULL, size_t start=0, size_t end = size_t(-1), size_t limit=size_t(-1)) const;
      PARAMS   :
      - NAME   : table
        TYPES  : const Table&
        DESCR  : Reference to table     
      - NAME   : column
        DESCR  : Column index
        TYPES  : size_t
      - NAME   : resultcount
        DESCR  : The number of rows used to find the highest value.
        TYPES  : size_t*
      - NAME   : start
        TYPES  : size_t
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : size_t
        DESCR  : "Row to stop search. Default: -1 (infinity)."
      - NAME   : limit
        TYPES  : size_t
        DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : [int64_t, time_t]
        DESCR  : The highest value.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_maximum
  - query_minimum_date:
  - query_minimum:
      NAMES    : sum
      DESCR    : &query_minimum_descr
                 |
                 This method finds the lowest value.
      SUMMARY  : &query_minimum_summary
                 |
                 Lowest value.
      CONST    : true
      SIGNATURE: |
                 int64_t minimum(const Table& table, size_t column, size_t* resultcount=NULL, size_t start=0, size_t end = size_t(-1), size_t limit=size_t(-1)) const;
                 time_t minimum_date(const Table& table, size_t column, size_t* resultcount=NULL, size_t start=0, size_t end = size_t(-1), size_t limit=size_t(-1)) const;
      PARAMS   :
      - NAME   : table
        TYPES  : const Table&
        DESCR  : Reference to table     
      - NAME   : column
        DESCR  : Column index
        TYPES  : size_t
      - NAME   : resultcount
        DESCR  : The number of rows used to find the value.
        TYPES  : size_t*
      - NAME   : start
        TYPES  : size_t
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : size_t
        DESCR  : "Row to stop search. Default: -1 (infinity)."
      - NAME   : limit
        TYPES  : size_t
        DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : [int64_t, time_t]
        DESCR  : The lowest value.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_manimum
  - query_average:
      NAMES    : average
      SUMMARY  : &query_average_summary
                 |
                 Calcualtes the average.
      DESCR    : &query_average_descr
                 |
                 Calcualtes the average.
      CONST    : true
      PARAMS   :
      - NAME   : table
        TYPES  : const Table&
        DESCR  : Reference to table     
      - NAME   : column
        DESCR  : Column index
        TYPES  : size_t
      - NAME   : resultcount
        DESCR  : The number of rows used to calculate the average.
        TYPES  : size_t*
      - NAME   : start
        TYPES  : size_t
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : size_t
        DESCR  : "Row to stop search. Default: -1 (infinity)."
      - NAME   : limit
        TYPES  : size_t
        DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : double
        DESCR  : The average.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_average
  - query_remove:
      NAME     : remove
      DESCR    : &query_remove_descr
                 |
                 This method will remove all matching rows in the source table.
      SUMMARY  : &query_remove_summary
                 |
                 Remove rows
      CONST    : true
      PARAMS   :
      - NAME   : table
        TYPES  : const Table&
        DESCR  : Reference to table     
      - NAME   : column
        DESCR  : Column index
        TYPES  : size_t
      - NAME   : resultcount
        DESCR  : The number of rows used to calculate the average.
        TYPES  : size_t*
      - NAME   : start
        TYPES  : size_t
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : size_t
        DESCR  : "Row to stop search. Default: -1 (infinity)."
      - NAME   : limit
        TYPES  : size_t
        DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : size_t
        DESCR  : The number of rows removed.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_remove
- Multithreaded:
  METHODS:
  - query_find_all_multi:
  - query_find_all_const_multi:
      DESCR    : &query_find_all_multi_descr
                 |
                 Execute a query using (POSIX) threads. See the {@link class_tableview} class for further details. 
      SUMMARY  : &query_find_all_multi_summary
                 |
                 Execute query.
      SIGNATURE: |
                 TableView      find_all_multi(Table& table, size_t start=0, size_t end=size_t(-1), size_t limit=size_t(-1));
                 ConstTableView find_all_multi(const Table& table, size_t start=0, size_t end=size_t(-1), size_t limit=size_t(-1));

      PARAMS:
      - NAME   : table
        TYPES  : [Table&, const Table&]
        DESCR  : Reference to table
      - NAME   : start
        TYPES  : size_t
        DESCR  : "Row to begin search. Default: 0."
      - NAME   : end
        TYPES  : size_t
        DESCR  : "Row to stop search. Default: -1 (infinity)."
      - NAME   : limit
        TYPES  : size_t
        DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : [TableView, ConstTableView]
        DESCR  : The TableView object.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_cpp_query_find_all_multi
  - query_set_threads:
      NAMES    : set_threads
      SUMMARY  : &query_set_threads_summary
                 |
                 Set the number of threads
      DESCR    : &query_set_threads_descr
                 |
                 Set the number of threads
      PARAMS:
      - NAME   : threadcount
        TYPES  : unsigned int
        DESCR  : Number of threads
      RETURN:
      - DESCR  : 
        TYPES  : int
      EXAMPLE:
      - DESCR  :
        CODE   : ex_cpp_query_find_all_multi